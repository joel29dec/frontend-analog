{"ast":null,"code":"import _objectSpread from \"/Users/cookietelos/Development/Flatiron/Flatiron Pair Projects/analog/analog-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/cookietelos/Development/Flatiron/Flatiron Pair Projects/analog/analog-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Login from './UserStatus/Login';\nimport Signup from './UserStatus/Signup';\nimport { Route } from 'react-router-dom';\nimport BoardgameContainer from './BoardgameContainer/BoardgameContainer';\nimport Navbar from './Navbar/Navbar';\nimport Profile from './Profile/Profile';\nimport CartContainer from './CheckoutContainer/CartContainer';\nimport HeaderWidget from './HeaderContainer/HeaderWidget';\nimport Success from './CheckoutContainer/Cart/Success';\nimport Sidebar from './Sidebar.png';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from './actions/boardgameActions.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addToCart = boardgameId => {\n      debugger;\n      let activeCart = this.state.cart;\n      const game = activeCart.find(boardgame => {\n        return boardgame.id === boardgameId;\n      });\n      const gameInfo = this.props.boardgames.find(boardgame => {\n        return boardgame.id === boardgameId;\n      });\n\n      if (game) {\n        activeCart.map(boardgame => {\n          if (boardgame.id === boardgameId) {\n            return boardgame.quantity += 1;\n          }\n        });\n      } else {\n        activeCart.push({\n          id: boardgameId,\n          name: gameInfo.name,\n          image: gameInfo.image,\n          price: gameInfo.price,\n          quantity: 1\n        });\n      }\n\n      this.setState({\n        cart: activeCart\n      });\n    };\n\n    this.subtractFromCart = boardgameId => {\n      let activeCart = this.state.cart;\n      activeCart.map(boardgame => {\n        if (boardgame.id === boardgameId && boardgame.quantity > 1) {\n          return boardgame.quantity -= 1;\n        }\n      });\n      this.setState({\n        cart: activeCart\n      });\n    };\n\n    this.removeFromCart = boardgameId => {\n      let activeCart = this.state.cart;\n      const filteredCart = activeCart.filter(boardgame => {\n        if (!boardgame.id === boardgameId) {\n          return boardgame;\n        }\n      });\n      this.setState({\n        cart: filteredCart\n      });\n    };\n\n    this.state = {\n      auth: {\n        user: {}\n      },\n      cart: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchBoardgames();\n  }\n\n  handleLogin(user) {\n    this.setState({\n      auth: {\n        user\n      }\n    });\n    localStorage.setItem('token', user.token);\n  }\n\n  handleLogout(user) {\n    this.setState({\n      auth: {\n        user: {}\n      }\n    });\n    localStorage.removeItem('token');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      auth: this.state.auth,\n      handleLogout: () => this.handleLogout(),\n      cart: this.state.cart,\n      boardgames: this.state.boardgames,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: routeProps => {\n        return React.createElement(Login, Object.assign({}, routeProps, {\n          handleLogin: user => {\n            this.handleLogin(user);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile\",\n      render: routeProps => {\n        return React.createElement(Profile, Object.assign({}, routeProps, {\n          user: this.state.auth,\n          handleLogin: user => {\n            this.handleLogin(user);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(HeaderWidget, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"body-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"filter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: Sidebar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        })), React.createElement(BoardgameContainer, {\n          addToCart: id => {\n            this.addToCart(id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        })));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      render: routeProps => {\n        return React.createElement(Signup, Object.assign({}, routeProps, {\n          handleLogin: user => {\n            this.handleLogin(user);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/cart\",\n      render: routeProps => {\n        return React.createElement(CartContainer, Object.assign({\n          boardgames: this.props.boardgames,\n          cart: this.state.cart,\n          addToCart: id => {\n            this.addToCart(id);\n          },\n          subtractFromCart: id => {\n            this.subtractFromCart(id);\n          },\n          removeFromCart: id => {\n            this.removeFromCart(id);\n          },\n          checkout: this.checkout\n        }, routeProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/success\",\n      render: () => {\n        return React.createElement(Success, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  debugger;\n  return {\n    boardgames: state.boardgameReducer.boardgames,\n    cart: state.boardgameReducer.cart\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, _objectSpread({}, actions))(App);","map":{"version":3,"sources":["/Users/cookietelos/Development/Flatiron/Flatiron Pair Projects/analog/analog-frontend/src/App.js"],"names":["React","Component","Login","Signup","Route","BoardgameContainer","Navbar","Profile","CartContainer","HeaderWidget","Success","Sidebar","connect","bindActionCreators","actions","App","constructor","props","addToCart","boardgameId","activeCart","state","cart","game","find","boardgame","id","gameInfo","boardgames","map","quantity","push","name","image","price","setState","subtractFromCart","removeFromCart","filteredCart","filter","auth","user","componentDidMount","fetchBoardgames","handleLogin","localStorage","setItem","token","handleLogout","removeItem","render","routeProps","checkout","mapStateToProps","boardgameReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport Login from './UserStatus/Login'\nimport Signup from './UserStatus/Signup'\nimport { Route } from 'react-router-dom';\nimport BoardgameContainer from './BoardgameContainer/BoardgameContainer'\nimport Navbar from './Navbar/Navbar'\nimport Profile from './Profile/Profile'\nimport CartContainer from './CheckoutContainer/CartContainer'\nimport HeaderWidget from './HeaderContainer/HeaderWidget'\nimport Success from './CheckoutContainer/Cart/Success'\nimport Sidebar from './Sidebar.png'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from './actions/boardgameActions.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      auth: { user: {} },\n      cart: []\n     }\n  }\n\n  componentDidMount(){\n    this.props.fetchBoardgames()\n  }\n\n  handleLogin(user){\n    this.setState({\n      auth: { user }\n    })\n    localStorage.setItem('token', user.token)\n  }\n\n  handleLogout(user){\n    this.setState({\n      auth: { user: {} }\n    })\n    localStorage.removeItem('token')\n  }\n\n  addToCart = (boardgameId) => {\n    debugger\n    let activeCart = this.state.cart\n    const game = activeCart.find(boardgame => {return boardgame.id === boardgameId})\n    const gameInfo = this.props.boardgames.find(boardgame => {return boardgame.id === boardgameId})\n    if (game){\n      activeCart.map(boardgame => {\n        if (boardgame.id === boardgameId){return boardgame.quantity += 1}\n      })\n    } else {\n      activeCart.push({id: boardgameId, name: gameInfo.name, image: gameInfo.image, price: gameInfo.price, quantity: 1})\n    }\n    this.setState({\n      cart: activeCart\n    })\n  }\n\n  subtractFromCart = (boardgameId) => {\n    let activeCart = this.state.cart\n    activeCart.map(boardgame => {\n      if (boardgame.id === boardgameId && boardgame.quantity > 1){return boardgame.quantity -= 1}\n    })\n    this.setState({\n      cart: activeCart\n    })\n  }\n\n\n  removeFromCart = (boardgameId) => {\n    let activeCart = this.state.cart\n    const filteredCart = activeCart.filter(boardgame => {\n      if (!boardgame.id === boardgameId){\n        return boardgame\n      }\n    })\n    this.setState({\n      cart: filteredCart\n    })\n  }\n\n  render() { \n    \n    return ( \n    <div className=\"wrapper\">\n      <Navbar auth={this.state.auth} handleLogout={()=> this.handleLogout()} cart={this.state.cart} boardgames={this.state.boardgames}/>\n      \n      <Route path=\"/login\" render={(routeProps) => {\n        return <Login {...routeProps}\n        handleLogin={(user) => {this.handleLogin(user)}}/>\n      }} />\n      <Route path=\"/profile\" render={(routeProps) => {\n        return <Profile {...routeProps}\n        user={this.state.auth}\n        handleLogin={(user) => {this.handleLogin(user)}}/>\n      }} />\n      <Route exact path=\"/\" render={() => {\n        return <div >\n            <HeaderWidget />\n            <div className=\"body-container\">\n              <div className=\"filter\">\n                <img src={Sidebar} />\n              </div>\n            <BoardgameContainer addToCart={(id) => {this.addToCart(id)}}/>\n            </div>\n          </div>\n      }} />\n      <Route path=\"/signup\" render={(routeProps) => {\n        return <Signup {...routeProps}\n        handleLogin={(user) => {this.handleLogin(user)}}/>\n      }} />\n      <Route path=\"/cart\" render={(routeProps) => {\n        return <CartContainer boardgames={this.props.boardgames} cart={this.state.cart} addToCart={(id) => {this.addToCart(id)}} subtractFromCart={(id) => {this.subtractFromCart(id)}} removeFromCart={(id) => {this.removeFromCart(id)}}\n        checkout={this.checkout} {...routeProps}/>\n      }} />\n      <Route path=\"/success\" render={() => {\n        return <Success />\n      }} />\n    </div>\n     );\n  }\n}\n\nfunction mapStateToProps(state) {\n  debugger\n  return {boardgames: state.boardgameReducer.boardgames, cart: state.boardgameReducer.cart}\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {actions: bindActionCreators(actions, dispatch)}\n}\n\n\nexport default connect( mapStateToProps, {...actions} )(App)\n"]},"metadata":{},"sourceType":"module"}